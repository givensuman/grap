{"$message_type":"diagnostic","message":"`filter_map()` will run forever if the iterator repeatedly produces an `Err`","code":{"code":"clippy::lines_filter_map_ok","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1758,"byte_end":1780,"line_start":71,"line_end":71,"column_start":32,"column_end":54,"is_primary":true,"text":[{"text":"    for line in reader.lines().filter_map(Result::ok) {","highlight_start":32,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this expression returning a `std::io::Lines` may produce an infinite number of `Err` in case of a read error","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1743,"byte_end":1757,"line_start":71,"line_end":71,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"    for line in reader.lines().filter_map(Result::ok) {","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#lines_filter_map_ok","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::lines_filter_map_ok)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace with","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1758,"byte_end":1780,"line_start":71,"line_end":71,"column_start":32,"column_end":54,"is_primary":true,"text":[{"text":"    for line in reader.lines().filter_map(Result::ok) {","highlight_start":32,"highlight_end":54}],"label":null,"suggested_replacement":"map_while(Result::ok)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `filter_map()` will run forever if the iterator repeatedly produces an `Err`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:71:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for line in reader.lines().filter_map(Result::ok) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace with: `map_while(Result::ok)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: this expression returning a `std::io::Lines` may produce an infinite number of `Err` in case of a read error\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:71:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for line in reader.lines().filter_map(Result::ok) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#lines_filter_map_ok\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::lines_filter_map_ok)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
